services:
  frontend:
    build:
      context: frontend
      dockerfile: Dockerfile.dev
    ports:
      - "3000:3000"
    restart: unless-stopped
    depends_on:
      - api
    networks:
      - app-network

  api:
    build:
      context: API
      dockerfile: Dockerfile
    ports:
      - "8000:80"
    volumes:
      - ./API:/app
    restart: unless-stopped
    environment:
      - LOG_LEVEL=info
      - DATABASE_URL=${DATABASE_URL}
      - SECRET_KEY=${SECRET_KEY}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
    depends_on:
      - db
      - networkx-mcp
    networks:
      - app-network

  networkx-mcp:
    build:
      context: NetworkXMCP
      dockerfile: Dockerfile
    ports:
      - "8001:8001"
    volumes:
      - ./NetworkXMCP:/app
    restart: unless-stopped
    environment:
      - LOG_LEVEL=info
    networks:
      - app-network

  db:
    image: postgres:15
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./API/init.sql:/docker-entrypoint-initdb.d/init.sql
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - "5432:5432"
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data:
