{
  "servers": [
    {
      "name": "network-visualization-mcp",
      "url": "http://localhost:8000/mcp",
      "description": "MCP server for network visualization with enhanced features",
      "tools": [
        {
          "name": "update_network",
          "description": "Update the network data in the MCP server",
          "parameters": {
            "nodes": {
              "type": "array",
              "description": "List of nodes",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "Node ID"
                  },
                  "label": {
                    "type": "string",
                    "description": "Node label"
                  },
                  "x": {
                    "type": "number",
                    "description": "X coordinate"
                  },
                  "y": {
                    "type": "number",
                    "description": "Y coordinate"
                  },
                  "size": {
                    "type": "number",
                    "description": "Node size"
                  },
                  "color": {
                    "type": "string",
                    "description": "Node color"
                  }
                },
                "required": ["id"]
              }
            },
            "edges": {
              "type": "array",
              "description": "List of edges",
              "items": {
                "type": "object",
                "properties": {
                  "source": {
                    "type": "string",
                    "description": "Source node ID"
                  },
                  "target": {
                    "type": "string",
                    "description": "Target node ID"
                  },
                  "width": {
                    "type": "number",
                    "description": "Edge width"
                  },
                  "color": {
                    "type": "string",
                    "description": "Edge color"
                  }
                },
                "required": ["source", "target"]
              }
            }
          },
          "required": ["nodes", "edges"]
        },
        {
          "name": "upload_network_file",
          "description": "Upload a network file and parse it into nodes and edges",
          "parameters": {
            "file_content": {
              "type": "string",
              "description": "Base64 encoded content of the network file"
            },
            "file_name": {
              "type": "string",
              "description": "Name of the file being uploaded"
            },
            "file_type": {
              "type": "string",
              "description": "MIME type of the file"
            }
          },
          "required": ["file_content", "file_name"]
        },
        {
          "name": "change_layout",
          "description": "Change the layout algorithm for the network visualization",
          "parameters": {
            "layout_type": {
              "type": "string",
              "description": "Type of layout algorithm",
              "enum": [
                "spring",
                "circular",
                "random",
                "spectral",
                "shell",
                "spiral",
                "kamada_kawai",
                "fruchterman_reingold",
                "bipartite",
                "multipartite",
                "planar"
              ]
            },
            "layout_params": {
              "type": "object",
              "description": "Parameters for the layout algorithm"
            }
          },
          "required": ["layout_type"]
        },
        {
          "name": "calculate_centrality",
          "description": "Calculate centrality metrics for nodes in the graph",
          "parameters": {
            "centrality_type": {
              "type": "string",
              "description": "Type of centrality to calculate",
              "enum": [
                "degree",
                "closeness",
                "betweenness",
                "eigenvector",
                "pagerank"
              ]
            }
          },
          "required": ["centrality_type"]
        },
        {
          "name": "highlight_nodes",
          "description": "Highlight specific nodes in the network",
          "parameters": {
            "node_ids": {
              "type": "array",
              "description": "List of node IDs to highlight",
              "items": {
                "type": "string"
              }
            },
            "highlight_color": {
              "type": "string",
              "description": "Color to use for highlighting"
            }
          },
          "required": ["node_ids"]
        },
        {
          "name": "change_visual_properties",
          "description": "Change visual properties of nodes or edges",
          "parameters": {
            "property_type": {
              "type": "string",
              "description": "Type of property to change",
              "enum": ["node_size", "node_color", "edge_width", "edge_color"]
            },
            "property_value": {
              "type": "string",
              "description": "Value to set for the property"
            },
            "property_mapping": {
              "type": "object",
              "description": "Optional mapping of node/edge IDs to property values"
            }
          },
          "required": ["property_type", "property_value"]
        },
        {
          "name": "get_network_info",
          "description": "Get information about the current network",
          "parameters": {}
        },
        {
          "name": "get_node_info",
          "description": "Get information about specific nodes in the network",
          "parameters": {
            "node_ids": {
              "type": "array",
              "description": "List of node IDs to get information for",
              "items": {
                "type": "string"
              }
            }
          },
          "required": ["node_ids"]
        },
        {
          "name": "save_network",
          "description": "Save the current network data for a user",
          "parameters": {
            "user_id": {
              "type": "string",
              "description": "ID of the user"
            },
            "network_name": {
              "type": "string",
              "description": "Name to save the network as"
            }
          },
          "required": ["user_id"]
        },
        {
          "name": "load_network",
          "description": "Load a saved network for a user",
          "parameters": {
            "user_id": {
              "type": "string",
              "description": "ID of the user"
            },
            "network_name": {
              "type": "string",
              "description": "Name of the network to load"
            }
          },
          "required": ["user_id"]
        },
        {
          "name": "list_user_networks",
          "description": "List all saved networks for a user",
          "parameters": {
            "user_id": {
              "type": "string",
              "description": "ID of the user"
            }
          },
          "required": ["user_id"]
        },
        {
          "name": "apply_community_layout",
          "description": "Apply a layout algorithm based on community detection",
          "parameters": {
            "algorithm": {
              "type": "string",
              "description": "Community detection algorithm to use",
              "enum": ["louvain", "greedy_modularity"]
            },
            "layout_params": {
              "type": "object",
              "description": "Parameters for the layout algorithm"
            }
          },
          "required": []
        },
        {
          "name": "compare_layouts",
          "description": "Compare different layout algorithms for the current network",
          "parameters": {
            "layouts": {
              "type": "array",
              "description": "List of layout algorithms to compare",
              "items": {
                "type": "string",
                "enum": [
                  "spring",
                  "circular",
                  "random",
                  "spectral",
                  "shell",
                  "spiral",
                  "kamada_kawai",
                  "fruchterman_reingold",
                  "bipartite",
                  "multipartite",
                  "planar",
                  "community"
                ]
              }
            }
          },
          "required": []
        },
        {
          "name": "get_sample_network",
          "description": "Get a sample network (Zachary's Karate Club)",
          "parameters": {},
          "required": []
        },
        {
          "name": "recommend_layout",
          "description": "Recommend a layout algorithm based on user's question or network properties",
          "parameters": {
            "question": {
              "type": "string",
              "description": "User's question about visualization"
            }
          },
          "required": ["question"]
        },
        {
          "name": "export_network_as_graphml",
          "description": "Export the current network as GraphML format",
          "parameters": {
            "include_positions": {
              "type": "boolean",
              "description": "Whether to include node positions in the GraphML"
            },
            "include_visual_properties": {
              "type": "boolean",
              "description": "Whether to include visual properties in the GraphML"
            }
          },
          "required": []
        },
        {
          "name": "process_chat_message",
          "description": "Process a chat message and execute network operations",
          "parameters": {
            "message": {
              "type": "string",
              "description": "The chat message to process"
            }
          },
          "required": ["message"]
        }
      ],
      "resources": [
        {
          "name": "network",
          "description": "Current network data including nodes and edges",
          "uri": "/mcp/resources/network"
        }
      ]
    }
  ]
}
